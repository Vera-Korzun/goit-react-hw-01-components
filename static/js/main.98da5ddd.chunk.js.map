{"version":3,"sources":["components/profile/StatsListItem.js","components/profile/StatsList.js","components/profile/ProfileStyles.js","components/profile/Profile.js","components/colors/colors.js","components/statistics/StatisticsItem.js","components/statistics/StatisticsStyles.js","components/statistics/Statistics.js","components/friendList/FriendListItem.js","components/friendList/FriendLIstStyles.js","components/friendList/FriendList.js","components/transactionHistory/TransactionHistoryItem.js","components/transactionHistory/TransactionHistoryStyles.js","components/transactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["StatsListItem","followers","views","likes","className","StatsList","stats","Wrapper","styled","div","Profile","props","src","avatar","alt","name","tag","location","randomColor","x","Math","floor","random","y","z","StatisticsItem","label","percentage","style","backgroundColor","Statistics","title","map","stat","key","id","FriendListItem","status","isOnline","width","FriendList","friends","friend","TransactionHistoryItem","type","amount","currency","toUpperCase","slice","TransactionHistory","transactions","transaction","App","user","statisticalData","ReactDOM","render","document","getElementById"],"mappings":"osFAsBeA,EAnBO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACzC,OACE,qCACE,qBAAIC,UAAU,YAAd,UACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BH,OAE9B,qBAAIG,UAAU,YAAd,UACE,sBAAMA,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BF,OAE9B,qBAAIE,UAAU,YAAd,UACE,sBAAMA,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,WCJrBE,EARG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,oBAAIF,UAAU,aAAd,SACE,cAAC,EAAD,eAAmBE,O,syCCLzB,IAiEeC,EAjECC,IAAOC,IAAV,KCwBEC,EArBC,SAACC,GACf,OACE,cAAC,EAAD,UACE,sBAAKP,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEQ,IAAKD,EAAME,OACXC,IAAI,gHACJV,UAAU,WAEZ,mBAAGA,UAAU,OAAb,SAAqBO,EAAMI,OAC3B,oBAAGX,UAAU,MAAb,cAAqBO,EAAMK,OAC3B,mBAAGZ,UAAU,WAAb,SAAyBO,EAAMM,cAGjC,cAAC,EAAD,CAAWX,MAAOK,EAAML,cCejBY,MARf,WACE,IAAIC,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,EAAIH,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBE,EAAIJ,KAAKC,MAAsB,IAAhBD,KAAKE,UAExB,MAAM,OAAN,OAAcH,EAAd,aAAoBI,EAApB,aAA0BC,EAA1B,MCnBaC,EATQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/B,OACE,qBAAIvB,UAAU,OAAOwB,MAAO,CAAEC,gBAAgB,GAAD,OAAKX,MAAlD,UACE,sBAAMd,UAAU,QAAhB,SAAyBsB,IACzB,uBAAMtB,UAAU,aAAhB,UAA8BuB,EAA9B,W,i1BCNN,IA2CepB,EA3CCC,IAAOC,IAAV,KCmBEqB,EAhBI,SAAC,GAA2B,IAAzBxB,EAAwB,EAAxBA,MAAwB,IAAjByB,aAAiB,MAAT,GAAS,EAC5C,OACE,cAAC,EAAD,UACE,0BAAS3B,UAAU,aAAnB,UACG2B,GAAS,oBAAI3B,UAAU,QAAd,0BAEV,oBAAIA,UAAU,iBAAd,SACGE,EAAM0B,KAAI,SAACC,GAAD,OACT,wBAAC,EAAD,2BAAoBA,GAApB,IAA0BC,IAAKD,EAAKE,iBCCjCC,EAXQ,SAAC,GAAgC,IAA9BvB,EAA6B,EAA7BA,OAAQE,EAAqB,EAArBA,KAC1BsB,EAD+C,EAAfC,SACZ,gBAAkB,iBAC5C,OACE,qBAAIlC,UAAU,OAAd,UACE,sBAAMA,UAAWiC,IACjB,qBAAKjC,UAAU,SAASQ,IAAKC,EAAQC,IAAI,GAAGyB,MAAM,OAClD,mBAAGnC,UAAU,OAAb,SAAqBW,Q,uzBCP3B,IA0CeR,EA1CCC,IAAOC,IAAV,KCeE+B,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,cAAC,EAAD,UACE,oBAAIrC,UAAU,mBAAd,SACGqC,EAAQT,KAAI,SAACU,GAAD,OACX,wBAAC,EAAD,2BAAoBA,GAApB,IAA4BR,IAAKQ,EAAOP,cCGnCQ,EAVgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC9C,OACE,+BACE,6BAAKF,EAAK,GAAGG,cAAgBH,EAAKI,MAAM,KACxC,6BAAKH,IACL,6BAAKC,Q,i+BCNX,IAwCevC,EAxCCC,IAAOC,IAAV,KCyBEwC,EAtBY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5B,OACE,cAAC,EAAD,UACE,wBAAO9C,UAAU,sBAAjB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACG8C,EAAalB,KAAI,SAACmB,GAAD,OAChB,wBAAC,EAAD,2BAA4BA,GAA5B,IAAyCjB,IAAKiB,EAAYhB,iB,+BCIvDiB,EAZH,WACV,OACE,qCACE,cAAC,EAAD,eAAaC,IACb,cAAC,EAAD,CAAYtB,MAAM,eAAezB,MAAOgD,IAExC,cAAC,EAAD,CAAYb,QAASA,IACrB,cAAC,EAAD,CAAoBS,aAAcA,QCbxCK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.98da5ddd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StatsListItem = ({ followers, views, likes }) => {\r\n  return (\r\n    <>\r\n      <li className=\"statsitem\">\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{followers}</span>\r\n      </li>\r\n      <li className=\"statsitem\">\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{views}</span>\r\n      </li>\r\n      <li className=\"statsitem\">\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{likes}</span>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatsListItem;\r\n\r\nStatsListItem.propTypes = {\r\n  followers: PropTypes.number,\r\n  views: PropTypes.number,\r\n  likes: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatsListItem from \"./StatsListItem\";\r\n\r\nconst StatsList = ({ stats }) => {\r\n  return (\r\n    <ul className=\"list stats\">\r\n      <StatsListItem {...stats} />\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default StatsList;\r\n\r\nStatsList.propTypes = {\r\n  stats: PropTypes.object,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .profile {\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    background-color: #ffffff;\r\n    border-radius: 6px;\r\n    box-shadow: 4px 5px 15px 5px rgba(0, 0, 0, 0.57);\r\n    overflow: hidden;\r\n    margin: 20px auto;\r\n  }\r\n  .description {\r\n    justify-content: center;\r\n    border: 1;\r\n  }\r\n  .avatar {\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n    margin: 25px auto;\r\n  }\r\n  .name {\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    color: #000000;\r\n    margin-bottom: 10px;\r\n  }\r\n  .tag {\r\n    font-size: 15px;\r\n    color: #a9a9a9;\r\n    margin-bottom: 10px;\r\n  }\r\n  .location {\r\n    font-size: 15px;\r\n    color: #a9a9a9;\r\n    margin-bottom: 15px;\r\n  }\r\n  .stats {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .statsitem {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px 10px;\r\n    width: calc(100% / 3);\r\n    border-top: 1px solid #a9a9a9;\r\n    background-color: #f0ffff;\r\n  }\r\n  .statsitem:not(:last-child) {\r\n    border-right: 1px solid #a9a9a9;\r\n  }\r\n  .label {\r\n    font-size: 12px;\r\n    color: #a9a9a9;\r\n  }\r\n  .quantity {\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n    color: #000000;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatsList from \"./StatsList\";\r\nimport Wrapper from \"./ProfileStyles.js\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"profile\">\r\n        <div className=\"description\">\r\n          <img\r\n            src={props.avatar}\r\n            alt=\"Аватар пользователя\"\r\n            className=\"avatar\"\r\n          />\r\n          <p className=\"name\">{props.name}</p>\r\n          <p className=\"tag\">@{props.tag}</p>\r\n          <p className=\"location\">{props.location}</p>\r\n        </div>\r\n\r\n        <StatsList stats={props.stats} />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  props: PropTypes.object,\r\n};\r\n","// const colors = [\r\n//   \"#D8BFD8\",\r\n//   \"#DDA0DD\",\r\n//   \"#EE82EE\",\r\n//   \"#DA70D6\",\r\n//   \"#FF00FF\",\r\n//   \"#FF00FF\",\r\n//   \"#BA55D3\",\r\n//   \"#9370DB\",\r\n//   \"#8A2BE2\",\r\n//   \"#9400D3\",\r\n//   \"#9932CC\",\r\n//   \"#8B008B\",\r\n//   \"#800080\",\r\n//   \"#4B0082\",\r\n//   \"#6A5ACD\",\r\n//   \"#483D8B\",\r\n// ];\r\n\r\n// const randomIntegerFromInterval = (min, max) => {\r\n//   return Math.floor(Math.random() * (max - min + 1) + min);\r\n// };\r\n\r\n// const randomColor = () => {\r\n//   return colors[randomIntegerFromInterval(0, colors.length - 1)];\r\n// };\r\n\r\nfunction randomColor() {\r\n  let x = Math.floor(Math.random() * 256);\r\n  let y = Math.floor(Math.random() * 256);\r\n  let z = Math.floor(Math.random() * 256);\r\n\r\n  return `rgb(${x}, ${y}, ${z})`;\r\n}\r\n\r\nexport default randomColor;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport randomColor from \"../colors/colors.js\";\r\n\r\nconst StatisticsItem = ({ label, percentage }) => {\r\n  return (\r\n    <li className=\"item\" style={{ backgroundColor: `${randomColor()}` }}>\r\n      <span className=\"label\">{label}</span>\r\n      <span className=\"percentage\">{percentage}%</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default StatisticsItem;\r\n\r\nStatisticsItem.propTypes = {\r\n  label: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .statistics {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    background-color: #fff;\r\n    width: 350px;\r\n    border-radius: 6px;\r\n    overflow: hidden;\r\n    margin: 50px auto;\r\n  }\r\n  .title {\r\n    color: #696969;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    margin: 20px auto;\r\n  }\r\n  .stat-list {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: row;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 20px 10px;\r\n    width: calc(100% / 5);\r\n\r\n    border-left: none;\r\n  }\r\n  .label {\r\n    font-size: 18px;\r\n    color: #fff;\r\n    margin-bottom: 12px;\r\n  }\r\n  .percentage {\r\n    font-size: 20px;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatisticsItem from \"./StatisticsItem\";\r\nimport Wrapper from \"./StatisticsStyles\";\r\n\r\nconst Statistics = ({ stats, title = \"\" }) => {\r\n  return (\r\n    <Wrapper>\r\n      <section className=\"statistics\">\r\n        {title && <h2 className=\"title\">Upload stats</h2>}\r\n\r\n        <ul className=\"list stat-list\">\r\n          {stats.map((stat) => (\r\n            <StatisticsItem {...stat} key={stat.id} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  const status = isOnline ? \"status online\" : \"status offline\";\r\n  return (\r\n    <li className=\"item\">\r\n      <span className={status}></span>\r\n      <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n\r\nFriendListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .friend-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    border: 1px solid #a9a9a9;\r\n    border-radius: 6px;\r\n    box-shadow: 4px 5px 15px 5px rgba(0, 0, 0, 0.57);\r\n    padding: 15px 20px;\r\n    width: 250px;\r\n    background-color: #fff;\r\n  }\r\n  .item:not(:last-child) {\r\n    margin-bottom: 15px;\r\n  }\r\n  .status {\r\n    display: inline-block;\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    margin-right: 15px;\r\n  }\r\n  .status.online {\r\n    background-color: green;\r\n  }\r\n  .status.offline {\r\n    background-color: red;\r\n  }\r\n\r\n  .avatar {\r\n    margin-right: 15px;\r\n  }\r\n  .name {\r\n    font-size: 25px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport Wrapper from \"./FriendLIstStyles\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <Wrapper>\r\n      <ul className=\"list friend-list\">\r\n        {friends.map((friend) => (\r\n          <FriendListItem {...friend} key={friend.id} />\r\n        ))}\r\n      </ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistoryItem = ({ type, amount, currency }) => {\r\n  return (\r\n    <tr>\r\n      <td>{type[0].toUpperCase() + type.slice(1)}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TransactionHistoryItem;\r\n\r\nTransactionHistoryItem.propTypes = {\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 50px;\r\n  .transaction-history {\r\n    margin: 0 auto;\r\n    border-collapse: collapse;\r\n    box-shadow: 4px 5px 15px 5px rgba(0, 0, 0, 0.57);\r\n  }\r\n  .transaction-history thead {\r\n    background-color: #add8e6;\r\n    color: white;\r\n  }\r\n  .transaction-history th {\r\n    padding: 10px;\r\n    width: 150px;\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n  }\r\n  .transaction-history th:not(:last-child) {\r\n    border-right: 1px solid #ffffff;\r\n  }\r\n  .transaction-history tbody tr {\r\n    background-color: #ffffff;\r\n  }\r\n  .transaction-history tbody tr:nth-child(even) {\r\n    background-color: #fff0f5;\r\n  }\r\n  .transaction-history td {\r\n    padding: 10px;\r\n    width: 150px;\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    color: #808080;\r\n  }\r\n  .transaction-history td:not(:last-child) {\r\n    border-right: 1px solid #dcdcdc;\r\n  }\r\n`;\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TransactionHistoryItem from \"./TransactionHistoryItem\";\r\nimport Wrapper from \"./TransactionHistoryStyles\";\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n  return (\r\n    <Wrapper>\r\n      <table className=\"transaction-history\">\r\n        <thead>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {transactions.map((transaction) => (\r\n            <TransactionHistoryItem {...transaction} key={transaction.id} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import React from \"react\";\r\nimport Profile from \"./profile/Profile\";\r\n//import user from \"../data/user.json\";\r\nimport Statistics from \"./statistics/Statistics\";\r\n//import statisticalData from \"../data/statistical-data.json\";\r\nimport FriendList from \"./friendList/FriendList\";\r\n//import friends from \"../data/friends.json\";\r\nimport TransactionHistory from \"./transactionHistory/TransactionHistory\";\r\n//import transactions from \"../data/transactions.json\";\r\nimport { user, statisticalData, friends, transactions } from \"../data/data\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile {...user} />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      {/* <Statistics stats={statisticalData} />; */}\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory transactions={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}